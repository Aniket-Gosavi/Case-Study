2023-07-03 15:01:00,335 [INFO] com.aniket.UserServiceApplication [restartedMain] Starting UserServiceApplication using Java 17.0.7 with PID 4248 (C:\Users\Aniket\Documents\Case Study\Backend\UserService\target\classes started by Aniket in C:\Users\Aniket\Documents\Case Study\Backend\UserService)
2023-07-03 15:01:00,594 [INFO] com.aniket.UserServiceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-07-03 15:01:01,182 [INFO] org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-03 15:01:01,183 [INFO] org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-03 15:01:06,940 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-07-03 15:01:08,410 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 1420 ms. Found 2 MongoDB repository interfaces.
2023-07-03 15:01:11,124 [INFO] org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=46b94fb5-10e2-34c6-b53e-7268f5a9e036
2023-07-03 15:01:17,267 [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8002 (http)
2023-07-03 15:01:17,327 [INFO] org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2023-07-03 15:01:17,333 [INFO] org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-07-03 15:01:18,281 [INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2023-07-03 15:01:18,283 [INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 17093 ms
2023-07-03 15:01:19,690 [INFO] org.mongodb.driver.client [restartedMain] MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.9.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.7+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@776cb09a, com.mongodb.Jep395RecordCodecProvider@6d3e4d51]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-07-03 15:01:19,884 [INFO] org.mongodb.driver.cluster [cluster-ClusterId{value='64a295678521cd06306d2c40', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=221561600}
2023-07-03 15:01:21,517 [WARN] org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2023-07-03 15:01:33,457 [INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [restartedMain] Eureka HTTP Client uses RestTemplate.
2023-07-03 15:01:37,097 [WARN] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [restartedMain] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-07-03 15:01:37,535 [INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2023-07-03 15:01:37,854 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2023-07-03 15:01:38,145 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2023-07-03 15:01:38,512 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2023-07-03 15:01:38,514 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2023-07-03 15:01:38,514 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2023-07-03 15:01:38,514 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2023-07-03 15:01:38,514 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2023-07-03 15:01:38,515 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2023-07-03 15:01:38,515 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2023-07-03 15:01:45,872 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2023-07-03 15:01:45,910 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2023-07-03 15:01:45,956 [INFO] com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-07-03 15:01:46,047 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1688376706044 with initial instances count: 0
2023-07-03 15:01:46,058 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application USERSERVICE with eureka with status UP
2023-07-03 15:01:46,060 [INFO] com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1688376706060, current=UP, previous=STARTING]
2023-07-03 15:01:46,096 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_USERSERVICE/LAPTOP-OMQI5KUJ:userservice:8002: registering service...
2023-07-03 15:01:46,359 [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8002 (http) with context path ''
2023-07-03 15:01:46,397 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8002
2023-07-03 15:01:47,327 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_USERSERVICE/LAPTOP-OMQI5KUJ:userservice:8002 - registration status: 204
2023-07-03 15:01:47,398 [INFO] com.aniket.UserServiceApplication [restartedMain] Started UserServiceApplication in 51.211 seconds (process running for 56.967)
2023-07-03 15:02:15,917 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Disable delta property : false
2023-07-03 15:02:15,924 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Single vip registry refresh property : null
2023-07-03 15:02:15,928 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Force full registry fetch : false
2023-07-03 15:02:15,932 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application is null : false
2023-07-03 15:02:15,933 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Registered Applications size is zero : true
2023-07-03 15:02:15,933 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application version is -1: false
2023-07-03 15:02:15,933 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Getting all instance registry info from the eureka server
2023-07-03 15:02:15,976 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] The response status is 200
2023-07-03 15:06:38,523 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2023-07-03 15:11:38,530 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
